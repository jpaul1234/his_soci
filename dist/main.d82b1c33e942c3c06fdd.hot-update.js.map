{"version":3,"file":"main.d82b1c33e942c3c06fdd.hot-update.js","sources":["/home/mickie/development/his_soci/src/components/core/dhis2.js"],"sourcesContent":["import React from 'react';\nimport isPlainObject from 'lodash/isPlainObject';\nimport concat from 'lodash/concat';\nimport intersection from 'lodash/intersection';\nimport isNull from 'lodash/isNull';\nimport isArray from 'lodash/isArray';\n/**\n * Get symbols\n * @param {*} currentUser \n * @param {*} key\n */\nexport const getSymbolValues=(currentUser,key)=>{\n  const keyValues = Object.getOwnPropertySymbols(currentUser[key]);\n  for ( let keyValue of keyValues){\n    if ((keyValue.toString()).indexOf(key) > -1){\n      return currentUser[key][keyValue];\n    }\n  } \n}\n/**\n * Check if user is admin or assessment admin\n * @param {*} d2 \n */\nexport const userIsAdmin=async(d2)=>{\n  let adminConfig = { \n    isAdmin: false,\n    isAssessmentAdmin: false\n  }\n  const userAuthorities = getSymbolValues(d2.currentUser,'authorities');\n  const userGroups = await d2.Api.getApi().get('me?filter=userGroups.code:ilike:his_soci_admin&paging=false&fields=id,userGroups[id,name,code]');\n  const selectedUserGroups = userGroups['userGroups'];\n  if (selectedUserGroups.length > 0){\n    for(let group of selectedUserGroups){\n      if(group.code.toLowerCase() === 'his_soci_admin'){\n        adminConfig.isAssessmentAdmin = true\n      }\n    }\n  } \n  for(let val of userAuthorities){\n    if(val === 'ALL'){\n      adminConfig.isAdmin = true;\n    }\n  }  \n  return adminConfig;\n}\n/**\n * Check if respondent id exist in an assessment and return assessment and respondent\n * @param { string } assessmentId Assessment Id\n * @param { string } respondentId respondent Id sent via email\n * @returns { object }\n */\nexport const checkAssessmentByRespondent=(assessments,assessmentId,respondentId)=>{\n  let newAssessment = {};\n  const currentAssessment = assessments.filter((assessment)=>{\n    return (assessment.id === assessmentId)\n  });\n  if((currentAssessment !== undefined) && (currentAssessment.length > 0)){\n    if((currentAssessment[0].respondents.length > 0) && (currentAssessment[0] !== undefined)){\n      const currentRespondent = currentAssessment[0].respondents.filter((respondent)=>{\n        return (respondent.id === respondentId);\n      });\n      newAssessment = currentAssessment[0];\n      newAssessment.respondents= currentRespondent;\n      \n    } \n    else {\n      newAssessment = currentAssessment[0];\n      newAssessment['respondents']= [{\n        id:currentAssessment[0].id,\n      }];\n    }\n  }\n  return newAssessment;\n}\n/**\n * Filter current assessment from all assessments\n * @param { string } assessmentId Assessment Id\n * @param { array } assessments All existing assessments in the data store\n * @returns { array }\n */\nexport const filterAssessmentById=(assessments,assessmentId)=>{\n  return assessments.filter((assessment)=>{\n    if ( assessment.tracking !== undefined){\n      return (assessment.tracking.id === assessmentId);\n    }    \n  });\n}\n/**\n * Filter current assessments from all assessments\n * @param { string } assessmentId Assessment Id\n * @returns { array }\n */\nexport const filterAssessment=(assessments,assessmentId)=>{\n  return assessments.filter((assessment)=>{\n    if ( assessment.background !== undefined){\n      return (assessment.background.reference === assessmentId)\n    }    \n  });\n}\n/**\n * Filter data by parameter\n * @param { array } data Data to search from\n * @param { string } key Key used to do match\n * @param { string } search Word to search\n */\nexport const filterData=(data,key,search)=>{\n  return data.filter((dv)=>{\n    return (dv[key] === search);\n  });\n}\n/**\n * Generate tabular data for data entry analysis\n * @param { object } assessment Can be current assessment or any\n * @param { array } hisComponentSchema \n * @param { array } hisDomainSchema\n * @returns { array } \n */\nexport const generateTable=(assessment, hisComponentSchema, hisDomainSchema)=>{\n  let tableAssessments = [];\n  hisDomainSchema.forEach((domain,dIndex)=>{\n    tableAssessments.push({ \n      name: domain.name,\n      current: filterData(assessment.domain.current,'name',domain.name),\n      goal: filterData(assessment.domain.goal,'name',domain.name),\n      subdomains:[]\n    });\n    const selectedSubDomains = getComponentsInDomain(domain.items,hisComponentSchema);\n    selectedSubDomains.forEach((component,cIndex)=>{\n      tableAssessments[dIndex].subdomains.push({\n        name: component.name,\n        current: filterData(assessment.component.current,'name',component.name),\n        goal: filterData(assessment.component.goal,'name',component.name),\n        subcomponents:[]\n      });\n      component.items.forEach((item)=>{\n        const current = filterData(assessment.current,'key',item);\n        const goal = filterData(assessment.goal,'key',item);\n        tableAssessments[dIndex].subdomains[cIndex].subcomponents.push({\n          current: current,\n          goal: goal,\n          name: current[0].name\n        });\n      });\n    });\n  });\n  return tableAssessments;\n}\n/**\n * Get components that belong to a certain domain\n * @param {*} componentItems Assessment components in a subdomain\n * @param {*} domainItems Assessment components in a domain\n */\nexport const getComponentsInDomain=(domainItems,subDomainSchema)=>{\n  return subDomainSchema.filter((subDomain)=>{\n    const matchedItems = intersection(domainItems,subDomain.items);\n    return ( matchedItems.length > 0);\n  })\n}\n/**\n *\n Create events data payload for DHIS2 Event program without registration\n**/\nexport const createDataValues=(currentData, event)=>{\n  if(currentData !== undefined){\n    currentData.events.push(event);\n  }\n  return currentData;\n}\n/**\n Create event from data submitted\n**/\nexport const createEvent=(data)=>{\n  let event = {\n    dataValues:[]\n  };\n  if((data !== undefined) && (data.length > 0)){\n    data.map((value)=>{\n      console.log(\"value\",value);\n      Object.keys(value).map((keyValue)=>{\n        event.dataValues=concat(event.dataValues,getValue(value[keyValue],keyValue));\n        return event.dataValues;\n      });\n    });\n  }\n  return event;\n}\n\n/**\ngetValue from object\n**/\nconst getValue=(value,key)=>{\n  let objectArray= [];\n  if(isPlainObject(value)){\n    Object.keys(value).map((keyValue)=>{\n      if(keyValue !== 'event') {\n        const keyProperty = '#/properties/'+ key +'/properties/'+ keyValue;\n        if(isArray(value[keyValue])){\n          value[keyValue].map((innerKeyValue)=>{\n            return getValue(innerKeyValue,keyValue);\n          });\n        }\n        else{\n          objectArray.push({ value:value[keyValue],dataElement:keyProperty});\n        } \n        return; \n      }    \n    });\n  }\n  else{\n      objectArray.push({ value: value, dataElement: key });\n  }\n  return objectArray;\n}\n/**\n * Send notifications\n * @param {*} subject \n * @param {*} sendType \n * @param {*} message\n * @param {*} recipients\n * @param {*} sender\n */\nexport const sendMessage=(data,sendType,sender,api,messageType)=>{\n  const notifications = {\n    \"programMessages\": []      \n  };\n  const conversations = { \n    \"messageConversations\":[]\n  };\n  data.respondents.forEach((dv)=>{\n    const message = \"Please complete assessment for \" + data.location + \" for period \" + data.period + \". \"+\n    api +\"/api/apps/HIS-SOCI-tool/index.html#/setup?id=\"+ dv.id+\"&assessment=\"+ data.id +\"\";\n    const subject = data.location + \" Assessment (\"+ dv.id +\")\";\n    notifications.programMessages.push(createMessage([dv.emailAddress],sender,subject,sendType,message,dv.event));\n    conversations.messageConversations.push({ \n      text : message,\n      subject: subject,\n      users: [sender]\n    });\n  });\n  return { \n    \"programMessages\": notifications,\n    \"conversations\":conversations\n  }\n}\n/**\n * Create notification/message\n */\nexport const createMessage=(recipients,sender,subject,sendType,message,event)=>{\n  const notification = \n      {\n        \"recipients\": {\n          \"emailAddresses\": recipients\n        },\n        \"programStageInstance\": {\n          \"id\": event\n        },\n        \"deliveryChannels\": sendType,\n        \"subject\": subject,\n        \"text\": message,\n        \"storeCopy\": true\n      }\n  return notification;\n}\n/**\n * Create user datastore\n * @param {*} d2 \n * @param {*} namespace \n * @param {*} key \n */\nexport const createUserDatastore=async (d2,namespace,key)=>{\n  if (!await d2.currentUser.dataStore.has(namespace)){\n    const nsp= await d2.currentUser.dataStore.create(namespace, false);\n    await nsp.set(key, {'current':[],'history':[]});\n  }\n  return;\n}\n/**\n * Update the user datastore\n * @param {*} d2 \n * @param {*} namespace \n * @param {*} key \n */\nexport const updateUserDataStore= (d2,namespace,key,data)=>{\n  d2.currentUser.dataStore.get(namespace).then((nsp)=> {\n    nsp.get(key).then(value => {\n      value.history=concat(value.history,value.current);\n      value.current=data;\n      nsp.set(key,value);\n    });\n  });\n  return;\n}\n/**\n* Get User Data store namespace key values\n* @param {*} d2 \n* @param {*} namespace \n* @param {*} key \n**/\n export const getUserDataStoreValue= async (d2, namespace, key)=>{\n  let values = {};\n  if(!isNull(d2)){\n    const nsp = await d2.currentUser.dataStore.get(namespace);\n    values= await getDataStoreKey(nsp,key);\n  }\n  return values;\n}\n/**\n * Check and create dataStore\n * @param {*} d2 \n * @param {*} namespace \n * @param {*} key \n */\n\nexport const createDataStore= async (d2,namespace,key)=>{\n  if(!await d2.dataStore.has(namespace)){\n    d2.dataStore.create(namespace).then(nsp => {\n        nsp.set(key, { 'assessments':[]});\n        nsp.set('mappings',{'mappings':[]});\n        nsp.set('setup',{'setup':[]});\n    });\n  }\n  return;\n}\n/**\nSave data to datastore\n**/\nexport const updateDataStore= (d2,namespace,key,data,dataType)=>{\n  d2.dataStore.get(namespace).then((nsp)=> {\n    nsp.get(key).then(value => {\n      if (isNull(value[dataType])){\n\n      }\n      else{\n        value[dataType]=concat(value[dataType],data);\n      }\n      nsp.set(key,value);\n    });\n  });\n}\n/**\n Map DHIS2 data elements to HIS SOCI tool attributes\n**/\nexport const getMappings= (mappings,data)=>{\n  data.events.forEach((event)=>{\n    return event.dataValues.map((value)=>{\n      if(value.value === undefined){\n        value.value = \"\";\n      }\n      mappings.mappings.forEach((mapping)=>{\n        if(mapping.property === value.dataElement){\n          value.dataElement = mapping.id;\n        }\n      });\n      return event;     \n    });\n  });\n  return data;\n}\n /**\n  * Get Data store namespace key values\n  *\n  *\n  **/\nexport const getDataStoreValue= async (d2, namespace, key)=>{\n  let values = {};\n  if(!isNull(d2)){\n    const nsp = await d2.dataStore.get(namespace);\n    values= await getDataStoreKey(nsp,key);\n  }\n  return values;\n}\n/**\n * Get key values from the datastore\n * @param { namespace } namespace \n * @param {*} key \n **/\nexport const getDataStoreKey=async (namespace,key)=>{\n  let keyValues = {};\n  const mappings = await namespace.get(key);\n  keyValues= await mappings;\n  return keyValues;\n}\n/**\n * HIS Soci Domain Schema\n */\nexport const hisDomainSchema  = [\n  { \n    \"name\":\"I HIS Leadership and Governance\",\n    \"items\":['me_plan','his_strategic_planning','his_policy_regulation','policy_compliance_enforcement','his_leadership_coordination','his_organization_structure_function'],\n  },\n  {\n    \"name\":\"II HIS Management and Workforce\",\n    \"items\":['his_competencies','his_training_education','hr_policy','his_financing_plan','resource_mobilization']\n  },\n  {\n    \"name\":\"III HIS Information and Communication Technologies (ICT) Infrastructure\",\n    \"items\":['reliable_power_electricity','ict_business_infrastructure','hardware','networks_internet_connectivity','business_continuity_processes_policies']\n  },\n  {\n    \"name\":\"IV HIS Standards and Interoperability\",\n    \"items\":['his_standard_guidelines','dataset_definitions','data_exchange_standards','master_facility_list','indicator_registry','terminology_management','unique_person_identity_management','enterprise_architecture','person_data_exchange','aggregate_data_exchange','commodity_management_data_exchange','data_security_exchange']\n  },\n  {\n    \"name\":\"V HIS Data Quality and Use\",\n    \"items\":['data_quality_assurance_quality_control','data_management','data_use_availability_strategy','information_data_availability','data_use_competencies','user_stakeholder_engagement','data_synthesis_communication','reporting_analytics_features','data_use_impact','data_collection_alignment_workflow','decision_support_clinical_other']\n  }\n]\n/**\n * HIS Soci Subcomponent Schema\n */\nexport const hisComponentSchema  = [\n  { \n    \"name\":\"I.A HIS Strategic Plan or HIS Strategy\",\n    \"items\":['me_plan','his_strategic_planning'],\n  },\n  {\n    \"name\":\"I.B Policy, Legal, and Regulatory Framework, and Compliance\",\n    \"items\":['his_policy_regulation','policy_compliance_enforcement']\n  },\n  {\n    \"name\":\"I.C HIS Leadership and Governance Organizational Structures and Functions\",\n    \"items\":['his_leadership_coordination','his_organization_structure_function']\n  },\n  {\n    \"name\":\"II.A HIS Workforce Capacity and Development\",\n    \"items\":['his_competencies','his_training_education','hr_policy']\n  },\n  {\n    \"name\":\"II.B Financial Management\",\n    \"items\":['his_financing_plan','resource_mobilization']\n  },\n  {\n    \"name\":\"III.A Operations and Maintenance\",\n    \"items\":['reliable_power_electricity','ict_business_infrastructure','hardware']\n  },\n  {\n    \"name\":\"III.B Communication Network (LAN and WAN)\",\n    \"items\":['networks_internet_connectivity']\n  },\n  {\n    \"name\":\"III.C Business Continuity\",\n    \"items\":['business_continuity_processes_policies']\n  },\n  {\n    \"name\":\"IV.A Standards and Guidelines\",\n    \"items\":['his_standard_guidelines','dataset_definitions','data_exchange_standards']\n  },\n  {\n    \"name\":\"IV.B HIS Core Services\",\n    \"items\":['master_facility_list','indicator_registry','terminology_management','unique_person_identity_management','enterprise_architecture']\n  },\n  {\n    \"name\":\"IV.C Interoperability (Data Exchange)\",\n    \"items\":['person_data_exchange','aggregate_data_exchange','commodity_management_data_exchange','data_security_exchange']\n  },\n  {\n    \"name\":\"V.A Data Quality Assurance\",\n    \"items\":['data_quality_assurance_quality_control','data_management']\n  },\n  {\n    \"name\":\"V.B Data Use\",\n    \"items\":['data_use_availability_strategy','information_data_availability','data_use_competencies','user_stakeholder_engagement','data_synthesis_communication','reporting_analytics_features','data_use_impact','data_collection_alignment_workflow','decision_support_clinical_other']\n  }\n]\n/**\n * HIS detailed components\n * @param {} data \n */\nexport const hisDetailedSchema = [\n  { \n    \"key\":\"his_strategic_planning\",\n    \"name\":\"I.A.1 HIS strategy\"  \n  },\n  { \n    \"key\":\"me_plan\",\n    \"name\":\"I.A.2 M&E plan\"\n  },\n  {\n    \"key\":\"his_policy_regulation\",\n    \"name\":\"I.B.1 Existence of HIS policies and legislation\"\n  },  \n  {\n    \"key\":\"policy_compliance_enforcement\",\n    \"name\":\"I.B.2 Policy compliance enforcement\"\n  },\n  {\n    \"key\":\"his_leadership_coordination\",\n    \"name\": \"I.C.1 HIS leadership and coordination\"\n  },\n  { \n    \"key\":\"his_organization_structure_function\",\n    \"name\": \"I.C.2 HIS organization structure and function\"\n  },\n  {\n    \"key\":\"his_competencies\",\n    \"name\": \"II.A.1 HIS competencies (knowledge, skills, and abilities)\"\n  },\n  {\n    \"key\":\"his_training_education\",\n    \"name\": \"II.A.2 HIS training and education (includes continuous professional development)\"\n  },\n  {\n    \"key\":\"hr_policy\",\n    \"name\": \"II.A.3 HR policy\"\n  },\n  {\n    \"key\":  \"his_financing_plan\",\n    \"name\":  \"II.B.1 HIS financing plan\"\n  },\n  {\n    \"key\":  \"resource_mobilization\",\n    \"name\": \"II.B.2 Resource mobilization\"\n  },\n  {\n    \"key\":  \"reliable_power_electricity\",\n    \"name\":  \"III.A.1 Reliable power/electricity\"\n  },\n  {\n    \"key\":\"ict_business_infrastructure\",\n    \"name\":\"III.A.2 ICT business infrastructure\"\n  },\n  {\n    \"key\":\"hardware\",\n    \"name\":\"III.A.3 Hardware\"\n  },\n  {\n    \"key\":\"networks_internet_connectivity\",\n    \"name\":\"III.B.1 Networks and Internet connectivity\"\n  },\n  {\n    \"key\":\"business_continuity_processes_policies\",\n    \"name\":\"III.C.1 Business continuity and processes and policies\"\n  },\n  {\n    \"key\":\"his_standard_guidelines\",\n    \"name\":\"IV.A.1 HIS standard guidelines\"\n  },\n  {\n    \"key\":\"dataset_definitions\",\n    \"name\":\"IV.A.2 Data set definitions (clinical and indicator)\"\n  },\n  {\n    \"key\":\"data_exchange_standards\",\n    \"name\":\"IV.A.3 Data exchange standards\"\n  },\n  {\n    \"key\":\"master_facility_list\",\n    \"name\":\"IV.B.1 Master facility list\"\n  },\n  {\n    \"key\":\"indicator_registry\",\n    \"name\":\"IV.B.2 Indicator registry\"\n  },\n  {\n    \"key\":\"terminology_management\",\n    \"name\":\"IV.B.3 Terminology management\"\n  },\n  {\n    \"key\":\"unique_person_identity_management\",\n    \"name\":\"IV.B.4 Unique person identity management\"\n  },\n  {\n    \"key\":\"enterprise_architecture\",\n    \"name\":\"IV.B.5 Enterprise architecture\"\n  },\n  {\n    \"key\":\"person_data_exchange\",\n    \"name\":\"IV.C.1 Person data exchange\"\n  },\n  {\n    \"key\":\"aggregate_data_exchange\",\n    \"name\":\"IV.C.2 Aggregate data exchange\"\n  },\n  {\n    \"key\":\"commodity_management_data_exchange\",\n    \"name\":\"IV.C.3 Commodity management data exchange\"\n  },\n  {\n    \"key\":\"data_security_exchange\",\n    \"name\":\"IV.C.4 Data security exchange\"\n  },\n  {\n    \"key\":\"data_quality_assurance_quality_control\",\n    \"name\":\"V.A.1 Data quality assurance and quality control\"\n  },\n  {\n    \"key\":\"data_management\",\n    \"name\":\"V.A.2 Data management\"\n  },\n  {\n    \"key\":\"data_use_availability_strategy\",\n    \"name\":\"V.B.1 Data use availability strategy\"\n  },\n  {\n    \"key\":\"information_data_availability\",\n    \"name\":\"V.B.2 Information/data availability\"\n  },\n  {\n    \"key\":\"data_use_competencies\",\n    \"name\":\"V.B.3 Data use competencies\"\n  },\n  {\n    \"key\":\"user_stakeholder_engagement\",\n    \"name\":\"V.B.4 User/stakeholder engagement\"\n  },\n  {\n    \"key\":\"data_synthesis_communication\",\n    \"name\":\"V.B.5 Data synthesis and communication\"\n  },\n  {\n    \"key\":\"reporting_analytics_features\",\n    \"name\":\"V.B.6 Reporting and analytics features\"\n  },\n  {\n    \"key\":\"data_use_impact\",\n    \"name\":\"V.B.7 Data use impact\"\n  },\n  {\n    \"key\":\"data_collection_alignment_workflow\",\n    \"name\":\"V.B.8 Data collection alignment with workflow\"\n  },\n  {\n    \"key\":\"decision_support_clinical_other\",\n    \"name\":\"V.B.9 Decision support (clinical or other)\"\n  }\n]\n/**\n * Create chart series\n */\nexport const getDataForChart=(data)=>{\n  let chartSeries = { current:[],goal:[],component:{ subcurrent:[],subgoal:[]},domain:{ current:[],goal:[] } };\n  if(data !== undefined){\n    data.map((value)=>{\n      Object.keys(value).map((keyValue)=>{\n        if((keyValue !== 'background') || (keyValue !== 'tracking') || (keyValue !== 'id')){\n          chartSeries.current.push({ key:keyValue, y:computeValues(value[keyValue].current) });\n          chartSeries.goal.push({key:keyValue, y:computeValues(value[keyValue].future) });\n         \n        }\n        //chartSeries.push();\n        \n      });\n    });\n  }\n  chartSeries.current = computeHisLabels(chartSeries.current,hisDetailedSchema);\n  chartSeries.goal = computeHisLabels(chartSeries.goal,hisDetailedSchema);\n  chartSeries.component.current = computeHisComponentValues(chartSeries.current,hisComponentSchema);\n  chartSeries.component.goal = computeHisComponentValues(chartSeries.goal,hisComponentSchema);\n  chartSeries.domain.current = computeHisComponentValues(chartSeries.current,hisDomainSchema);\n  chartSeries.domain.goal = computeHisComponentValues(chartSeries.goal,hisDomainSchema);\n  return chartSeries;\n}\n\n/**\n * Create components data from sub components\n * @param {} value \n */\nexport const computeHisComponentValues=(data,schemas)=>{\n  let schemaData = [];\n  schemas.forEach((schema)=>{\n    const extractedItemData = extractData(data,schema.items);\n    let acc = accumulatorSchema(extractedItemData);\n    if (schema.items.length > 0){   \n      const averageAcc = acc/(schema.items.length);   \n      schemaData.push({ name: schema.name, y: parseFloat(averageAcc.toFixed(2))  });\n    }\n    else{\n      schemaData.push({ name: schema.name, y: acc });\n    }\n  });\n  return schemaData;\n}\n/**\n * data accumulator for each sub component\n * @param {} value \n */\nexport const accumulatorSchema=(data)=>{\n  return data.reduce((acc,value)=>{\n    return acc + value.y;\n  },0);\n}\n/**\n * Extract sub component data from main data\n * @param {} value \n */\nexport const extractData=(data,items)=>{\n  let extractedData = [];\n  items.forEach((item)=>{\n    data.forEach((dv)=>{\n      if(dv.key === item){\n        extractedData.push(dv);\n      }      \n    });\n  });\n  return extractedData;\n}\n/**\n * compute the values for Goal and current status\n */\nexport const computeValues=(value)=>{ \n  if( value === '0 = Not Applicable'){\n    return 0;\n  }\n  else if( value ==='1 = Emerging/Ad hoc'){\n    return 1;\n  }\n  else if( value ==='2 = Repeatable'){\n    return 2;\n  }\n  else if( value ==='3 = Defined'){\n    return 3;\n  }\n  else if( value ==='4 = Managed'){\n    return 4\n  }\n  else if( value ==='5 = Optimized'){\n    return 5;\n  }\n  else{\n    return 0;\n  }\n}\n/**\n * Compute label for different HIS components\n */\nexport const computeHisLabels=(data,schemas)=>{\n  let schemaData = [];\n  schemas.forEach((schema)=>{\n    const schemaDataValue = filterSchemaData(data,schema.key);\n    if (schemaDataValue.length > 0){\n      schemaData.push({ key: schema.key, name: schema.name, y: schemaDataValue[0].y });\n    }\n    else{\n      schemaData.push({ key: schema.key, name: schema.name, y: 0 });\n    }\n  });    \n  return schemaData;\n}\n/**\n * Filter data by key \n */\nexport const filterSchemaData=(data,keySchema)=>{\n  return data.filter((dv)=>{\n    return (dv.key === keySchema);\n  });\n}"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;AAGA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;AAQA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;;AAGA;AACA;AAEA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;;;;;;;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;AAGA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;;;;AAGA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;;;;;AAIA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;;;;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;AAGA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}